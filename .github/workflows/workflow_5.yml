
name: despliegue heroku

on:  
  push: 
    branches:
      - master
    
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Set on JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/*.jar
          retention-days: 1
      - name: Todos Test
        run: mvn -B package
      - name: Upload target folder
        uses: actions/upload-artifact@v1
        with:
          name: target
          path: target

  publish_in_dockerhub:
    name: Publish in DockerHub
    runs-on: ubuntu-latest
    needs: [build]
    env:
      VERSION: $(mvn -q help:evaluate -Dexpression=project.version-DforceStdout) | sh
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Download jar from previous job
        uses: actions/download-artifact@v2
        with:
          name: target
      - name: Generate tag version for Docker image
        run: echo ::set-output name=tag::$(date)
        id: project
      - name: Login to DockerHub
        run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}" 
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$(mvn -q help:evaluate -Dexpression=project.version-DforceStdout | sh):${{ steps.project.outputs.tag }} .
      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$(mvn -q help:evaluate -Dexpression=project.version-DforceStdout | sh):${{ steps.project.outputs.tag }}
      

  publish_in_heroku_registry:
    name: Publish in Heroku Registry
    runs-on: ubuntu-latest
    needs: [build]
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Download Jar from previous job
        uses: actions/download-artifact@v1
        with:
          name: target
      - name: Build Docker Image
        run: docker build -t p .
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - name: Change image name to point to Heroku registry
        run: docker tag p registry.heroku.com/$HEROKU_APP/web
      - name: Login in Heroku container registry
        run: heroku container:login
      - name: Push image to Heroku Registry
        run: docker push registry.heroku.com/$HEROKU_APP/web

  deploy_to_heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [publish_in_heroku_registry]
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
    steps:
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - name: Login in Heroku
        run: heroku container:login
      - name: Deploy to Heroku
        run: heroku container:release web